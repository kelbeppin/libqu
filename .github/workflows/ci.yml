
name: CI*

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CPM_SOURCE_CACHE: ${{ github.workspace }}/cpm_modules
  CPM_USE_NAMED_CACHE_DIRECTORIES: TRUE

jobs:
  windows:
    name: Windows (${{ matrix.arch.name }}, ${{ matrix.config.name }})
    runs-on: windows-latest

    strategy:
      fail-fast: false

      matrix:
        arch:
        - { name: x86, flags: -A Win32 }
        - { name: x64, flags: -A x64 }
        config:
        - { name: static, flags: -D BUILD_SHARED_LIBS=0 }
        - { name: shared, flags: -D BUILD_SHARED_LIBS=1 }

    steps:
    - uses: actions/checkout@v3

    - uses: actions/cache@v3
      id: cache-cpm
      with:
        path: '**/cpm_modules'
        key: windows-cpm-modules-${{ hashFiles('**/CMakeLists.txt') }}

    - name: Configure
      run: cmake -B build ${{ matrix.arch.flags }} ${{ matrix.config.flags }}

    - name: Build (Debug)
      run: cmake --build build --config Debug

    - name: Install (Debug)
      run: cmake --install build --config Debug --prefix install/libquack-dbg

    - name: Build (Release)
      run: cmake --build build --config Release

    - name: Install (Release)
      run: cmake --install build --config Release --prefix install/libquack-rel

    - uses: actions/upload-artifact@v3
      with:
        name: libquack-windows-${{ matrix.arch.name }}-${{ matrix.config.name }}
        path: install/*

  linux:
    name: Linux (${{ matrix.compiler.name }})
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false

      matrix:
        compiler:
        - { name: GNU, c: gcc, cxx: g++ }
        - { name: Clang, c: clang, cxx: clang++ }

    steps:
    - uses: actions/checkout@v3

    - uses: actions/cache@v3
      id: cache-cpm
      with:
        path: '**/cpm_modules'
        key: linux-cpm-modules-${{ hashFiles('**/CMakeLists.txt') }}

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install ninja-build libgl1-mesa-dev libgles2-mesa-dev xorg-dev libopenal-dev

    - name: Configure
      run: >
        cmake -B build -G "Ninja Multi-Config"
        -D BUILD_SHARED_LIBS=0
        -D CMAKE_C_COMPILER=${{ matrix.compiler.c }}
        -D CMAKE_CXX_COMPILER=${{ matrix.compiler.cxx }}

    - name: Build (Debug)
      run: cmake --build build --config Debug

    - name: Build (Release)
      run: cmake --build build --config Release

