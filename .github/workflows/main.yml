
name: CI

on:
  push:
  pull_request:
  workflow_dispatch:

env:
  CPM_SOURCE_CACHE: ${{ github.workspace }}/cpm_modules
  CPM_USE_NAMED_CACHE_DIRECTORIES: TRUE

jobs:
  build:
    name: ${{ matrix.os.name }}-${{ matrix.compiler.name }}-${{ matrix.config.name }}-${{ matrix.arch }}
    runs-on: ${{ matrix.os.runner }}

    strategy:
      fail-fast: false

      matrix:
        os:
        - { name: windows, runner: windows-latest }
        - { name: linux, runner: ubuntu-latest }
        config:
        - { name: static, flags: -DBUILD_SHARED_LIBS=0 }
        - { name: shared, flags: -DBUILD_SHARED_LIBS=1 }
        compiler:
        - { name: msvc, flags: -DCMAKE_C_COMPILER=cl.exe -DCMAKE_CXX_COMPILER=cl.exe }
        - { name: gnu, flags: -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++ }
        - { name: clang, flags: -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ }
        arch: [ x64, x86 ]

        exclude:
        - os: { name: windows }
          compiler: { name: gnu }
        - os: { name: windows }
          compiler: { name: clang }
        - os: { name: linux }
          compiler: { name: msvc }
        - os: { name: linux }
          arch: x86

    steps:
    - uses: actions/checkout@v3

    - uses: actions/cache@v3
      id: cache-cpm
      with:
        path: '**/cpm_modules'
        key: ${{ matrix.os.name }}-cpm-modules-${{ hashFiles('**/CMakeLists.txt') }}

    - uses: egor-tensin/vs-shell@v2
      if: matrix.os.name == 'windows'
      with:
        arch: ${{ matrix.arch }}

    - name: Install dependencies
      if: matrix.os.name == 'linux'
      run: sudo apt-get -y install ninja-build libgl1-mesa-dev libgles2-mesa-dev xorg-dev libopenal-dev

    - name: Build
      run: |
        cmake -B build -G "Ninja Multi-Config" ${{ matrix.config.flags }} ${{ matrix.compiler.flags }} -DQU_BUILD_SAMPLES=1
        cmake --build build --parallel 4 --config Debug
        cmake --build build --parallel 4 --config Release

    - name: Pack
      shell: bash
      run: |
        cmake --install build --config Debug --prefix install-debug
        7z a libqu-${{ matrix.os.name }}-${{ matrix.compiler.name }}-${{ matrix.config.name }}-${{ matrix.arch }}-debug.zip install-debug/*
        cmake --install build --config Release --prefix install-release
        7z a libqu-${{ matrix.os.name }}-${{ matrix.compiler.name }}-${{ matrix.config.name }}-${{ matrix.arch }}-release.zip install-release/*

    - uses: actions/upload-artifact@v3
      with:
        name: libqu-${{ matrix.os.name }}-${{ matrix.compiler.name }}-${{ matrix.config.name }}-${{ matrix.arch }}
        path: libqu-*.zip

